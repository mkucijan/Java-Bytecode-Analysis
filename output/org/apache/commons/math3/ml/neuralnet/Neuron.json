{
  "<init>": {
    "0": [
      "aload_0",
      0,
      0
    ],
    "1": [
      "invokespecial",
      0,
      0
    ],
    "2": [
      "java/lang/Object.<init>:()V",
      0,
      0
    ],
    "4": [
      "aload_0",
      0,
      0
    ],
    "5": [
      "new",
      0,
      0
    ],
    "6": [
      "java/util/concurrent/atomic/AtomicLong",
      0,
      0
    ],
    "8": [
      "dup",
      0,
      0
    ],
    "9": [
      "lconst_0",
      0,
      0
    ],
    "10": [
      "invokespecial",
      0,
      0
    ],
    "11": [
      "java/util/concurrent/atomic/AtomicLong.<init>:(J)V",
      0,
      0
    ],
    "13": [
      "putfield",
      0,
      0
    ],
    "14": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.numberOfAttemptedUpdates:Ljava/util/concurrent/atomic/AtomicLong;",
      0,
      0
    ],
    "16": [
      "aload_0",
      0,
      0
    ],
    "17": [
      "new",
      0,
      0
    ],
    "18": [
      "java/util/concurrent/atomic/AtomicLong",
      0,
      0
    ],
    "20": [
      "dup",
      0,
      0
    ],
    "21": [
      "lconst_0",
      0,
      0
    ],
    "22": [
      "invokespecial",
      0,
      0
    ],
    "23": [
      "java/util/concurrent/atomic/AtomicLong.<init>:(J)V",
      0,
      0
    ],
    "25": [
      "putfield",
      0,
      0
    ],
    "26": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.numberOfSuccessfulUpdates:Ljava/util/concurrent/atomic/AtomicLong;",
      0,
      0
    ],
    "28": [
      "aload_0",
      0,
      0
    ],
    "29": [
      "lload_1",
      0,
      0
    ],
    "30": [
      "putfield",
      0,
      0
    ],
    "31": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.identifier:J",
      0,
      0
    ],
    "33": [
      "aload_0",
      0,
      0
    ],
    "34": [
      "aload_3",
      0,
      0
    ],
    "35": [
      "arraylength",
      0,
      0
    ],
    "36": [
      "putfield",
      0,
      0
    ],
    "37": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.size:I",
      0,
      0
    ],
    "39": [
      "aload_0",
      0,
      0
    ],
    "40": [
      "new",
      0,
      0
    ],
    "41": [
      "java/util/concurrent/atomic/AtomicReference",
      0,
      0
    ],
    "43": [
      "dup",
      0,
      0
    ],
    "44": [
      "aload_3",
      0,
      0
    ],
    "45": [
      "invokevirtual",
      0,
      0
    ],
    "46": [
      "[D.clone:()Ljava/lang/Object;",
      0,
      0
    ],
    "48": [
      "invokespecial",
      0,
      0
    ],
    "49": [
      "java/util/concurrent/atomic/AtomicReference.<init>:(Ljava/lang/Object;)V",
      0,
      0
    ],
    "51": [
      "putfield",
      0,
      0
    ],
    "52": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.features:Ljava/util/concurrent/atomic/AtomicReference;",
      0,
      0
    ],
    "54": [
      "return",
      0,
      0
    ]
  },
  "copy": {
    "0": [
      "new",
      0,
      0
    ],
    "1": [
      "org/apache/commons/math3/ml/neuralnet/Neuron",
      0,
      0
    ],
    "3": [
      "dup",
      0,
      0
    ],
    "4": [
      "aload_0",
      0,
      0
    ],
    "5": [
      "invokevirtual",
      0,
      0
    ],
    "6": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.getIdentifier:()J",
      0,
      0
    ],
    "8": [
      "aload_0",
      0,
      0
    ],
    "9": [
      "invokevirtual",
      0,
      0
    ],
    "10": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.getFeatures:()[D",
      0,
      0
    ],
    "12": [
      "invokespecial",
      0,
      0
    ],
    "13": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.<init>:(J[D)V",
      0,
      0
    ],
    "15": [
      "astore_1",
      0,
      0
    ],
    "16": [
      "aload_1",
      0,
      0
    ],
    "17": [
      "getfield",
      0,
      0
    ],
    "18": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.numberOfAttemptedUpdates:Ljava/util/concurrent/atomic/AtomicLong;",
      0,
      0
    ],
    "20": [
      "aload_0",
      0,
      0
    ],
    "21": [
      "getfield",
      0,
      0
    ],
    "22": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.numberOfAttemptedUpdates:Ljava/util/concurrent/atomic/AtomicLong;",
      0,
      0
    ],
    "24": [
      "invokevirtual",
      0,
      0
    ],
    "25": [
      "java/util/concurrent/atomic/AtomicLong.get:()J",
      0,
      0
    ],
    "27": [
      "invokevirtual",
      0,
      0
    ],
    "28": [
      "java/util/concurrent/atomic/AtomicLong.set:(J)V",
      0,
      0
    ],
    "30": [
      "aload_1",
      0,
      0
    ],
    "31": [
      "getfield",
      0,
      0
    ],
    "32": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.numberOfSuccessfulUpdates:Ljava/util/concurrent/atomic/AtomicLong;",
      0,
      0
    ],
    "34": [
      "aload_0",
      0,
      0
    ],
    "35": [
      "getfield",
      0,
      0
    ],
    "36": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.numberOfSuccessfulUpdates:Ljava/util/concurrent/atomic/AtomicLong;",
      0,
      0
    ],
    "38": [
      "invokevirtual",
      0,
      0
    ],
    "39": [
      "java/util/concurrent/atomic/AtomicLong.get:()J",
      0,
      0
    ],
    "41": [
      "invokevirtual",
      0,
      0
    ],
    "42": [
      "java/util/concurrent/atomic/AtomicLong.set:(J)V",
      0,
      0
    ],
    "44": [
      "aload_1",
      0,
      0
    ],
    "45": [
      "areturn",
      0,
      0
    ]
  },
  "getIdentifier": {
    "0": [
      "aload_0",
      0,
      0
    ],
    "1": [
      "getfield",
      0,
      0
    ],
    "2": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.identifier:J",
      0,
      0
    ],
    "4": [
      "lreturn",
      0,
      0
    ]
  },
  "getSize": {
    "0": [
      "aload_0",
      0,
      0
    ],
    "1": [
      "getfield",
      0,
      0
    ],
    "2": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.size:I",
      0,
      0
    ],
    "4": [
      "ireturn",
      0,
      0
    ]
  },
  "getFeatures": {
    "0": [
      "aload_0",
      0,
      0
    ],
    "1": [
      "getfield",
      0,
      0
    ],
    "2": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.features:Ljava/util/concurrent/atomic/AtomicReference;",
      0,
      0
    ],
    "4": [
      "invokevirtual",
      0,
      0
    ],
    "5": [
      "java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;",
      0,
      0
    ],
    "7": [
      "checkcast",
      0,
      0
    ],
    "8": [
      "[D",
      0,
      0
    ],
    "10": [
      "invokevirtual",
      0,
      0
    ],
    "11": [
      "[D.clone:()Ljava/lang/Object;",
      0,
      0
    ],
    "13": [
      "checkcast",
      0,
      0
    ],
    "14": [
      "[D",
      0,
      0
    ],
    "16": [
      "areturn",
      0,
      0
    ]
  },
  "compareAndSetFeatures": {
    "0": [
      "aload_2",
      1,
      1
    ],
    "1": [
      "arraylength",
      1,
      1
    ],
    "2": [
      "aload_0",
      1,
      1
    ],
    "3": [
      "getfield",
      1,
      1
    ],
    "4": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.size:I",
      1,
      1
    ],
    "6": [
      "if_icmpeq",
      1,
      1
    ],
    "7": [
      "17",
      1,
      1
    ],
    "9": [
      "new",
      1,
      0
    ],
    "10": [
      "org/apache/commons/math3/exception/DimensionMismatchException",
      1,
      0
    ],
    "12": [
      "dup",
      1,
      0
    ],
    "13": [
      "aload_2",
      1,
      0
    ],
    "14": [
      "arraylength",
      1,
      0
    ],
    "15": [
      "aload_0",
      1,
      0
    ],
    "16": [
      "getfield",
      1,
      0
    ],
    "17": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.size:I",
      1,
      0
    ],
    "19": [
      "invokespecial",
      1,
      0
    ],
    "20": [
      "org/apache/commons/math3/exception/DimensionMismatchException.<init>:(II)V",
      1,
      0
    ],
    "22": [
      "athrow",
      1,
      0
    ],
    "23": [
      "aload_0",
      0,
      0
    ],
    "24": [
      "getfield",
      0,
      0
    ],
    "25": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.features:Ljava/util/concurrent/atomic/AtomicReference;",
      0,
      0
    ],
    "27": [
      "invokevirtual",
      0,
      0
    ],
    "28": [
      "java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;",
      0,
      0
    ],
    "30": [
      "checkcast",
      0,
      0
    ],
    "31": [
      "[D",
      0,
      0
    ],
    "33": [
      "astore_3",
      0,
      0
    ],
    "34": [
      "aload_0",
      1,
      1
    ],
    "35": [
      "aload_3",
      1,
      1
    ],
    "36": [
      "aload_1",
      1,
      1
    ],
    "37": [
      "invokespecial",
      1,
      1
    ],
    "38": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.containSameValues:([D[D)Z",
      1,
      1
    ],
    "40": [
      "ifne",
      1,
      1
    ],
    "41": [
      "5",
      1,
      1
    ],
    "43": [
      "iconst_0",
      1,
      0
    ],
    "44": [
      "ireturn",
      1,
      0
    ],
    "45": [
      "aload_0",
      0,
      0
    ],
    "46": [
      "getfield",
      0,
      0
    ],
    "47": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.numberOfAttemptedUpdates:Ljava/util/concurrent/atomic/AtomicLong;",
      0,
      0
    ],
    "49": [
      "invokevirtual",
      0,
      0
    ],
    "50": [
      "java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J",
      0,
      0
    ],
    "52": [
      "pop2",
      0,
      0
    ],
    "53": [
      "aload_0",
      1,
      1
    ],
    "54": [
      "getfield",
      1,
      1
    ],
    "55": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.features:Ljava/util/concurrent/atomic/AtomicReference;",
      1,
      1
    ],
    "57": [
      "aload_3",
      1,
      1
    ],
    "58": [
      "aload_2",
      1,
      1
    ],
    "59": [
      "invokevirtual",
      1,
      1
    ],
    "60": [
      "[D.clone:()Ljava/lang/Object;",
      1,
      1
    ],
    "62": [
      "invokevirtual",
      1,
      1
    ],
    "63": [
      "java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z",
      1,
      1
    ],
    "65": [
      "ifeq",
      1,
      1
    ],
    "66": [
      "13",
      1,
      1
    ],
    "68": [
      "aload_0",
      1,
      0
    ],
    "69": [
      "getfield",
      1,
      0
    ],
    "70": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.numberOfSuccessfulUpdates:Ljava/util/concurrent/atomic/AtomicLong;",
      1,
      0
    ],
    "72": [
      "invokevirtual",
      1,
      0
    ],
    "73": [
      "java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J",
      1,
      0
    ],
    "75": [
      "pop2",
      1,
      0
    ],
    "76": [
      "iconst_1",
      1,
      0
    ],
    "77": [
      "ireturn",
      1,
      0
    ],
    "78": [
      "iconst_0",
      1,
      0
    ],
    "79": [
      "ireturn",
      1,
      0
    ]
  },
  "getNumberOfAttemptedUpdates": {
    "0": [
      "aload_0",
      0,
      0
    ],
    "1": [
      "getfield",
      0,
      0
    ],
    "2": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.numberOfAttemptedUpdates:Ljava/util/concurrent/atomic/AtomicLong;",
      0,
      0
    ],
    "4": [
      "invokevirtual",
      0,
      0
    ],
    "5": [
      "java/util/concurrent/atomic/AtomicLong.get:()J",
      0,
      0
    ],
    "7": [
      "lreturn",
      0,
      0
    ]
  },
  "getNumberOfSuccessfulUpdates": {
    "0": [
      "aload_0",
      0,
      0
    ],
    "1": [
      "getfield",
      0,
      0
    ],
    "2": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.numberOfSuccessfulUpdates:Ljava/util/concurrent/atomic/AtomicLong;",
      0,
      0
    ],
    "4": [
      "invokevirtual",
      0,
      0
    ],
    "5": [
      "java/util/concurrent/atomic/AtomicLong.get:()J",
      0,
      0
    ],
    "7": [
      "lreturn",
      0,
      0
    ]
  },
  "containSameValues": {
    "0": [
      "aload_2",
      1,
      1
    ],
    "1": [
      "arraylength",
      1,
      1
    ],
    "2": [
      "aload_0",
      1,
      1
    ],
    "3": [
      "getfield",
      1,
      1
    ],
    "4": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.size:I",
      1,
      1
    ],
    "6": [
      "if_icmpeq",
      1,
      1
    ],
    "7": [
      "17",
      1,
      1
    ],
    "9": [
      "new",
      1,
      0
    ],
    "10": [
      "org/apache/commons/math3/exception/DimensionMismatchException",
      1,
      0
    ],
    "12": [
      "dup",
      1,
      0
    ],
    "13": [
      "aload_2",
      1,
      0
    ],
    "14": [
      "arraylength",
      1,
      0
    ],
    "15": [
      "aload_0",
      1,
      0
    ],
    "16": [
      "getfield",
      1,
      0
    ],
    "17": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.size:I",
      1,
      0
    ],
    "19": [
      "invokespecial",
      1,
      0
    ],
    "20": [
      "org/apache/commons/math3/exception/DimensionMismatchException.<init>:(II)V",
      1,
      0
    ],
    "22": [
      "athrow",
      1,
      0
    ],
    "23": [
      "iconst_0",
      1,
      4
    ],
    "24": [
      "istore_3",
      1,
      4
    ],
    "25": [
      "iload_3",
      1,
      4
    ],
    "26": [
      "aload_0",
      1,
      4
    ],
    "27": [
      "getfield",
      1,
      4
    ],
    "28": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.size:I",
      1,
      4
    ],
    "30": [
      "if_icmpge",
      1,
      4
    ],
    "31": [
      "23",
      1,
      4
    ],
    "33": [
      "aload_1",
      2,
      1
    ],
    "34": [
      "iload_3",
      2,
      1
    ],
    "35": [
      "daload",
      2,
      1
    ],
    "36": [
      "aload_2",
      2,
      1
    ],
    "37": [
      "iload_3",
      2,
      1
    ],
    "38": [
      "daload",
      2,
      1
    ],
    "39": [
      "invokestatic",
      2,
      1
    ],
    "40": [
      "org/apache/commons/math3/util/Precision.equals:(DD)Z",
      2,
      1
    ],
    "42": [
      "ifne",
      2,
      1
    ],
    "43": [
      "5",
      2,
      1
    ],
    "45": [
      "iconst_0",
      2,
      0
    ],
    "46": [
      "ireturn",
      2,
      0
    ],
    "47": [
      "iinc",
      2,
      0
    ],
    "48": [
      "#3",
      2,
      0
    ],
    "49": [
      "-89",
      2,
      0
    ],
    "50": [
      "goto",
      2,
      4
    ],
    "51": [
      "-25",
      2,
      4
    ],
    "53": [
      "iconst_1",
      1,
      0
    ],
    "54": [
      "ireturn",
      1,
      0
    ]
  },
  "readObject": {
    "0": [
      "new",
      0,
      0
    ],
    "1": [
      "java/lang/IllegalStateException",
      0,
      0
    ],
    "3": [
      "dup",
      0,
      0
    ],
    "4": [
      "invokespecial",
      0,
      0
    ],
    "5": [
      "java/lang/IllegalStateException.<init>:()V",
      0,
      0
    ],
    "7": [
      "athrow",
      0,
      0
    ]
  },
  "writeReplace": {
    "0": [
      "new",
      0,
      0
    ],
    "1": [
      "org/apache/commons/math3/ml/neuralnet/Neuron$SerializationProxy",
      0,
      0
    ],
    "3": [
      "dup",
      0,
      0
    ],
    "4": [
      "aload_0",
      0,
      0
    ],
    "5": [
      "getfield",
      0,
      0
    ],
    "6": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.identifier:J",
      0,
      0
    ],
    "8": [
      "aload_0",
      0,
      0
    ],
    "9": [
      "getfield",
      0,
      0
    ],
    "10": [
      "org/apache/commons/math3/ml/neuralnet/Neuron.features:Ljava/util/concurrent/atomic/AtomicReference;",
      0,
      0
    ],
    "12": [
      "invokevirtual",
      0,
      0
    ],
    "13": [
      "java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;",
      0,
      0
    ],
    "15": [
      "checkcast",
      0,
      0
    ],
    "16": [
      "[D",
      0,
      0
    ],
    "18": [
      "invokespecial",
      0,
      0
    ],
    "19": [
      "org/apache/commons/math3/ml/neuralnet/Neuron$SerializationProxy.<init>:(J[D)V",
      0,
      0
    ],
    "21": [
      "areturn",
      0,
      0
    ]
  }
}